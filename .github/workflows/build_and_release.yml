name: Build and Publish Helm charts
on: [push]

jobs:
  build_and_release:
    name: Build and Publish Helm charts
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Generate build suffix
      uses: Cray-HPE/hms-build-scripts/generate-build-suffix@master
      id: build-suffix
      # with:
      #   stable-branches-regex: feature/CASMHMS-5197-actions
      
    - name: Build information
      shell: bash
      run: | 
        echo Build prefix: ${{ steps.build-suffix.outputs.build-suffix }}

    - name: Build changed charts
      uses: Cray-HPE/hms-build-scripts/build-changed-charts-action@master
      with:
        unstable-build-suffix: ${{ steps.build-suffix.outputs.build-suffix }}
    
    - name: Create Git tags for changed charts
      shell: bash
      run: | 
        for packaged_chart in $(find .packaged -mindepth 1 -maxdepth 1); do
          chart_tag=$(basename "$packaged_chart" .tgz)
          echo "Chart tag: $chart_tag"
          git tag $chart_tag
        done

        git push origin --tags
      if: steps.build-suffix.outputs.build-suffix == null
    
    - uses: jfrog/setup-jfrog-cli@v1
      env:
        JF_ARTIFACTORY_1: ${{ secrets.ARTIFACTORY_ALGOL60_JFROG_CLI_CONFIGURATION }}

    - name: Verify connectivity to Artifactory
      run: jfrog rt ping

    - name: Publish Helm charts
      env:
        ARTIFACTORY_REPO: csm-helm-charts
        STABLE_BUILD: ${{ steps.build-suffix.outputs.build-suffix == null }}
        COMPONENT: hms-sls-charts
        CHARTS_PATH: ./.packaged
        CHARTS_PATTERN: "*.tgz"
      run: |
        echo "Stable build: $STABLE_BUILD"

        SOURCE_PATTERN="$CHARTS_PATH/$CHARTS_PATTERN";
        echo "Source pattern: $SOURCE_PATTERN";

        STABLE_PATH="unstable";
        if [[ "$STABLE_BUILD" == "true" ]]; then
          STABLE_PATH="stable"
        fi;
        TARGET_PATTERN="$ARTIFACTORY_REPO/$STABLE_PATH/$COMPONENT";
        echo "Target pattern: $TARGET_PATTERN";

        jfrog rt upload "$SOURCE_PATTERN" "$TARGET_PATTERN"

