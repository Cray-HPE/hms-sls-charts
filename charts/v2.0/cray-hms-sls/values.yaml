---

kubectl:
  image:
    repository: artifactory.algol60.net/csm-docker/stable/docker-kubectl
    tag: 1.19.15
    pullPolicy: IfNotPresent

image:
  repository: artifactory.algol60.net/csm-docker/stable/cray-sls
  pullPolicy: IfNotPresent

# TODO this should be moved to the database migration job, as it doens't need to be told as it should know as the schema version should be baked into the image.
schemaVersion: "3"  # This needs to match the database schema version that the application requires
schemaStorageClass: ceph-cephfs-external
schemaAccessMode: ReadWriteMany

namespaceGetter:
  resolvDir: /etc/  # For CSM 1.1 and older use /run/netconfig/

loader:
  forceUpload: false
  checkS3Marker: true
  checkSLSContents: false
  max_ping_bucket_attempts: 30
  use_s3_dns_hack: true  # Should be false on vshasta, true on baremetal
  s3_dns_lookup_attempts: 30

cray-service:
  type: "Deployment"
  nameOverride: "cray-sls"
  fullnameOverride: "cray-sls"
  serviceAccountName: "jobs-watcher"
  replicaCount: 3
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - topologyKey: kubernetes.io/hostname
        labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - cray-sls
  strategy:
    rollingUpdate:
      maxUnavailable: 50%
    type: RollingUpdate
  containers:
    cray-sls:
      name: "cray-sls"
      image:
        repository: artifactory.algol60.net/csm-docker/stable/cray-sls
        pullPolicy: IfNotPresent
      ports:
        - name: http
          containerPort: 8376
      env:
        - name: DBUSER
          valueFrom:
            secretKeyRef:
              name: slsuser.cray-sls-postgres.credentials
              key: username
        - name: DBPASS
          valueFrom:
            secretKeyRef:
              name: slsuser.cray-sls-postgres.credentials
              key: password
        - name: SLS_MAX_DATABASE_CONNECTIONS
          value: "25"
      livenessProbe:
        httpGet:
          port: 8376
          path: /v1/liveness
        initialDelaySeconds: 10
        periodSeconds: 30
      readinessProbe:
        httpGet:
          port: 8376
          path: /v1/readiness
        initialDelaySeconds: 15
        periodSeconds: 30
  sqlCluster:
    enabled: true
    tls:
      enabled: true
    users:
      slsuser: []
    databases:
      sls: slsuser
    backup:
      enabled: true
      schedule: "10 23 * * *"  # Once per day at 11:10 pm
  ingress:
    enabled: true
    prefix: "/apis/sls/"
    uri: "/"

global:
  appVersion: latest  # By default use the latest tag, unless overiden via Helm
