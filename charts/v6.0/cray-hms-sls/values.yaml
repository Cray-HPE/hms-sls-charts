---
global:
  appVersion: 2.7.0
  testVersion: 2.7.0

image:
  repository: artifactory.algol60.net/csm-docker/stable/cray-sls
  pullPolicy: IfNotPresent

tests:
  image:
    repository: artifactory.algol60.net/csm-docker/stable/cray-sls-hmth-test
    pullPolicy: IfNotPresent

kubectl:
  image:
    repository: artifactory.algol60.net/csm-docker/stable/docker-kubectl
    tag: 1.24.17
    pullPolicy: IfNotPresent

# TODO this should be moved to the database migration job, as it doens't need to be told as it should know as the schema version should be baked into the image.
schemaVersion: "3"  # This needs to match the database schema version that the application requires
schemaStorageClass: ceph-cephfs-external
schemaAccessMode: ReadWriteMany

namespaceGetter:
  resolvDir: /etc/  # For CSM 1.1 and older use /run/netconfig/

loader:
  forceUpload: false
  checkS3Marker: true
  checkSLSContents: false
  max_ping_bucket_attempts: 30
  use_s3_dns_hack: true  # Should be false on vshasta, true on baremetal
  s3_dns_lookup_attempts: 30

configuration:
  cache:
    enabled: false
    ttlSeconds: 15
    capacity: 1000
  database:
    maxConnections: 25

slsInitJobTTL: 2147483647

cray-service:
  type: "Deployment"
  nameOverride: "cray-sls"
  fullnameOverride: "cray-sls"
  serviceAccountName: "jobs-watcher"
  replicaCount: 3
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - topologyKey: kubernetes.io/hostname
        labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - cray-sls
  strategy:
    rollingUpdate:
      maxUnavailable: 50%
    type: RollingUpdate
  containers:
    cray-sls:
      name: "cray-sls"
      image:
        repository: artifactory.algol60.net/csm-docker/stable/cray-sls
        pullPolicy: IfNotPresent
      ports:
        - name: http
          containerPort: 8376
      env:
        - name: DBUSER
          valueFrom:
            secretKeyRef:
              name: slsuser.cray-sls-postgres.credentials
              key: username
        - name: DBPASS
          valueFrom:
            secretKeyRef:
              name: slsuser.cray-sls-postgres.credentials
              key: password
        - name: SLS_MAX_DATABASE_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: cray-sls-config
              key: database.maxConnections
        - name: CACHE_LAYER_ENABLE
          valueFrom:
            configMapKeyRef:
              name: cray-sls-config
              key: cache.enabled
        - name: CACHE_TTL_SECONDS
          valueFrom:
            configMapKeyRef:
              name: cray-sls-config
              key: cache.ttlSeconds
        - name: CACHE_CAPACITY
          valueFrom:
            configMapKeyRef:
              name: cray-sls-config
              key: cache.capacity
        - name: POSTGRES_HOST
          value: cray-sls-postgres
        - name: POSTGRES_PORT
          value: "5432"
      livenessProbe:
        httpGet:
          port: 8376
          path: /v1/liveness
        initialDelaySeconds: 10
        periodSeconds: 30
      readinessProbe:
        httpGet:
          port: 8376
          path: /v1/readiness
        initialDelaySeconds: 15
        periodSeconds: 30
  ingress:
    enabled: true
    prefix: "/apis/sls/"
    uri: "/"

cray-postgresql:
  nameOverride: cray-sls
  fullnameOverride: cray-sls
  sqlCluster:
    enabled: true
    enableLogicalBackup: true
    logicalBackupSchedule: "10 23 * * *"  # Once per day at 11:10 pm
    instanceCount: 3
    tls:
      enabled: true
    users:
      slsuser: []
    databases:
      sls: slsuser
